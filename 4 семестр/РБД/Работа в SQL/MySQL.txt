MySQL.txt

========= Работа с БД ================

CREATE DATABASE [databasename];				Создание таблицы
SHOW DATABASES;								Список всех БД на сервере
USE [db name];								Подключиться для работы с БД
DROP DATABASE [database name];				Удалить БД

========= Работа с таблицами =========

CREATE TABLE имя_таблицы (
    имя_колонки1 ТИП ДАННЫХ,
    имя_колонки2 ТИП ДАННЫХ
);

CREATE TABLE AuthorsTBL (
    AuthorID INT NOT NULL AUTO_INCREMENT,
    AuthorName VARCHAR(100),
    PRIMARY KEY(AuthorID)
);

SHOW TABLES;								Вывести все таблицы
DESCRIBE [table name];						Посмотреть формат таблицы в базе
SELECT * FROM [table name];					Показать все содержимое в таблице
SELECT COUNT(*) FROM [table name];			Отобразить количество строк в таблице
SELECT SUM(*) FROM [table name];			Подсчитать количество колонок в таблице
DELETE from [table name] where [field name] = 'whatever';			Удаление строки в таблице
alter table [table name] DROP INDEX [column name];					Удаление столбцов в таблице
DROP TABLE [table name];					Удалить таблицу из базы

========= Работа с колонками =========

ALTER TABLE [table name] ADD COLUMN [new column name] varchar (20)					Добавить колонку в таблицу
ALTER TABLE [table name] CHANGE [old column name] [new column name] varchar (50);	Изменить дданные колонки
ALTER TABLE [table name] ADD UNIQUE ([column name]);								Колонка с уникальным именем
ALTER TABLE [table name] MODIFY [column name] VARCHAR(3);							Изменение размера колонки

========= Выборка данных =============

SELECT * FROM [table name];					Все содержимое таблицы
SHOW COLUMNS FROM [table name];				Отоброзить колонки и их содержимое в выбранной таблице
SELECT * FROM [table name] WHERE [field name] = "whatever";						Отоброзить строки выбранной таблицы с WHATEVER
SELECT * FROM [table name] WHERE name = "Bob" AND phone_number = '3444444';		Отоброзить все записи по условию
SELECT * FROM [table name] WHERE name != "Bob" AND phone_number = '3444444' order by phone_number;	Другой пример


========= Моя работа =================

На винде -  https://dev.mysql.com/downloads/installer/ 

ВКЛ - systemctl enable mariadb
ВКЛ - mysql -u root -p

DROP DATABASE mytestbd;

CREATE DATABASE mytestbd;
USE mytestbd;


CREATE TABLE Menu (
	IDDish INT NOT NULL AUTO_INCREMENT,
	Name VARCHAR(100) NOT NULL,
	CostD INT NOT NULL,
	PRIMARY KEY(IDDish) 
);

CREATE TABLE Student (
    IDStudent INT NOT NULL AUTO_INCREMENT,
    Kard INT,
    Name VARCHAR(100) NOT NULL,
    IDDish INT NOT NULL,
    PRIMARY KEY(IDStudent),
    FOREIGN KEY (IDDish) REFERENCES Menu(IDDish)
);

CREATE TABLE Cashier (
	IDCashier INT NOT NULL AUTO_INCREMENT,
	Name VARCHAR(100) NOT NULL,
	PRIMARY KEY(IDCashier) 
);

CREATE TABLE Cook (
	IDCook  INT NOT NULL AUTO_INCREMENT,
	Name  VARCHAR(100) NOT NULL,
	PRIMARY KEY(IDCook)
);

CREATE TABLE Ord (
	IDOrd INT NOT NULL AUTO_INCREMENT,
	Composit TEXT(100) NOT NULL,
	IDStudent INT NOT NULL,
	IDCook INT NOT NULL,
	PRIMARY KEY(IDOrd),
	FOREIGN KEY (IDStudent) REFERENCES Student(IDStudent),
	FOREIGN KEY (IDCook) REFERENCES Cook(IDCook)
);

SHOW TABLES;


INSERT INTO Menu (Name, CostD) VALUES ('Печеньки', '40'), ('Борщь', '100'), ('Шашлык с картошкой', '500'), ('Шаурма', '10000');

SELECT * FROM Menu;

INSERT INTO Student (Kard, Name, IDDish) VALUES ('12342', 'Макс', '3'), ('23413', 'Даша', '4'), ('34263', 'Маша', '2'), ('74850', 'Вова', '1');

SELECT * FROM Student;

INSERT INTO Cashier (Name) VALUES ('Василиса'), ('Анатолий');

SELECT * FROM Cashier;

INSERT INTO Cook (Name) VALUES ('Валера'), ('Мария');

SELECT * FROM Cook;

INSERT INTO Ord (Composit, IDStudent, IDCook) VALUES ('Шашлык с картошкой', '1', '1'), ('Шаурма', '2', '1'),('Борщь', '3', '2'),('Печеньки', '4', '2');

SELECT * FROM Ord;

	-- Вывод по равенству значений столбца указанным делается следующим образом: SELECT * FROM table_name WHERE column_name = “…”; Данная процедура позволяет нам отсортировать таблицу по конкретному значению столбца. \c

SELECT * FROM Student WHERE Name = 'Даша';

	-- Вывод только определенных столбцов делается следующим образом: SELECT column1_name, column2_name,…,column_name FROM table_name; \c

SELECT Name,Kard FROM Student;

	-- Вывести таблицу, связующую Студента с названием блюда: \c

SELECT Student.Name AS Студент, Menu.Name AS Заказ FROM Student JOIN Menu ON Student.IDDish = Menu.IDDish;


======================================
		Полина
======================================
DROP DATABASE Polina;

CREATE DATABASE Polina;
USE Polina;

CREATE TABLE Reservation (
	IDReservation INT NOT NULL AUTO_INCREMENT,
	Term TEXT(50) NOT NULL,
	CheckInTime TEXT(50) NOT NULL,
	PRIMARY KEY(IDReservation)
);

CREATE TABLE Room (
	IDRoom INT NOT NULL AUTO_INCREMENT,
	TypeOfNumber TEXT(50) NOT NULL,
	NumberOfRooms INT NOT NULL,
	Services TEXT(200) NOT NULL,
	Price INT NOT NULL,
	IDReservation INT NOT NULL,
	PRIMARY KEY(IDRoom),
	FOREIGN KEY (IDReservation) REFERENCES Reservation(IDReservation)
);

CREATE TABLE Adm (
	IDAdm INT NOT NULL AUTO_INCREMENT,
	Name TEXT(50) NOT NULL,
	PRIMARY KEY (IDAdm)
);

CREATE TABLE Customer (
	IDCustomer INT NOT NULL AUTO_INCREMENT,
	Name  TEXT(50) NOT NULL,
	PRIMARY KEY(IDCustomer),
	IDRoom INT NOT NULL,
	IDAdm INT NOT NULL,
	FOREIGN KEY (IDRoom) REFERENCES Room(IDRoom),
	FOREIGN KEY (IDAdm) REFERENCES Adm(IDAdm)	
);

SHOW TABLES;

INSERT INTO Reservation (Term, CheckInTime) VALUES ('1 день', '8:00'), ('2 недели', '13:00'), ('3 дня', '8:30'),('двое суток', '20:20');

INSERT INTO Room (TypeOfNumber, NumberOfRooms, Services, Price, IDReservation) VALUES ('Бюджет', '2', 'Сервис 1', '1000', '1'),('Премиум', '2', 'Сервис 2', '2000', '2'), ('Де-люкс', '3', 'Сервис 3', '3000', '3'), ('Лакшари', '5', 'Сервис 4', '8000', '4');

INSERT INTO Adm (Name) VALUES ('Вася'), ('Петя');

INSERT INTO Customer (Name, IDRoom, IDAdm) VALUES ('Петров', '1', '1'), ('Сидоров', '2', '2'), ('Сарачков', '3', '1'), ('Бубнов', '4', '2');

SELECT * FROM Reservation;
SELECT * FROM Room;
SELECT * FROM Adm;
SELECT * FROM Customer;

	Вывод по равенству значений столбца указанным делается следующим образом: SELECT * FROM table_name WHERE column_name = “…”; Данная процедура позволяет нам отсортировать таблицу по конкретному значению столбца.

SELECT * FROM Room WHERE TypeOfNumber = 'Лакшари';

	Вывод только определенных столбцов делается следующим образом: SELECT column1_name, column2_name,…,column_name FROM table_name;

SELECT Name,IDRoom FROM Customer;




====================================================================


SELECT * FROM Menu;
SELECT * FROM Student;
SELECT * FROM Cashier;
SELECT * FROM Cook;
SELECT * FROM Ord;